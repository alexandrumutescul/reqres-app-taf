name: Automated tests pipeline

on:
  push:
    branches: [main]
  schedule:
    - cron: '0 23 * * 1-5'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to test on'
        required: true
        default: dev
        type: choice
        options:
          - dev
      recordReport:
        description: 'Keep the cucumber report (as an artifact)'
        required: true
        type: boolean
        default: true
      recordResultData:
        description: 'Record resulting test data'
        required: true
        type: boolean
        default: false
      recordScreenshots:
        description: 'Take screenshots during run'
        required: true
        type: boolean
        default: false
      recordVideo:
        description: 'Take video of run'
        required: true
        type: boolean
        default: false

jobs:
  setup:
    name: 'Job: Determine environments to run on'
    runs-on: ubuntu-latest
    steps:
      - name: Use user input
        if: github.event_name == 'workflow_dispatch'
        run: echo ENVIRONMENTS="['${{ github.event.inputs.environment }}']" >> ${GITHUB_ENV}

      - name: Use default value
        if: github.event_name != 'workflow_dispatch'
        run: echo ENVIRONMENTS="['dev']" >> ${GITHUB_ENV}

  taf-chrome-linux:
    name: 'Tests'
    needs: 'setup'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    concurrency:
      group: ${{ matrix.environment }}_${{ matrix.browser }}_${{ github.ref }}
      cancel-in-progress: true

    strategy:
      fail-fast: false
      matrix:
        browser: [chrome]
        browser-version: [stable]
        node-version: [16.x]
        environment: [dev]

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Checkout git repository
        if: startsWith(github.event_name , 'pull_request') == false
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checkout git repository (on PR)
        if: startsWith(github.event_name , 'pull_request')
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Initialize record report option
        run: echo RECORD_REPORT=true >> ${GITHUB_ENV}

      - name: Initialize result data option
        run: echo RECORD_RESULT_DATA=false >> ${GITHUB_ENV}

      - name: Initialize record screenshots option
        run: echo RECORD_SCREENSHOTS=false >> ${GITHUB_ENV}

      - name: Initialize record video option
        run: echo RECORD_VIDEO=false >> ${GITHUB_ENV}

      - name: Deactivate report recording
        if: github.event.inputs.recordReport == 'false'
        run: echo RECORD_REPORT=false >> ${GITHUB_ENV}

      - name: Activate result data recording
        if: github.event.inputs.recordResultData == 'true'
        run: echo RECORD_RESULT_DATA=true >> ${GITHUB_ENV}

      - name: Activate screenshot recording
        if: github.event.inputs.recordScreenshots == 'true'
        run: echo RECORD_SCREENSHOTS=true >> ${GITHUB_ENV}

      - name: Activate video recording
        if: github.event.inputs.recordVideo == 'true'
        run: echo RECORD_VIDEO=true >> ${GITHUB_ENV}

      - name: Determine artifact identifier
        run: echo ARTIFACT_IDENTIFIER=${{ matrix.environment }}-${{ runner.os }}-${{ matrix.browser }}-${{ matrix.browser-version }} >> ${GITHUB_ENV}

      - name: Log details
        run: |
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_REF: ${GITHUB_REF}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "ARTIFACT_IDENTIFIER: ${ARTIFACT_IDENTIFIER}"
          echo "BROWSER: ${{ matrix.browser }}"
          echo "BROWSER-VERSION: ${{ matrix.browser-version }}"
          echo "ENVIRONMENT: ${{ matrix.environment }}"
          echo "NODE-VERSION: ${{ matrix.node-version }}"
          echo "RECORD_REPORT: ${RECORD_REPORT}"
          echo "RECORD_RESULT_DATA: ${RECORD_RESULT_DATA}"
          echo "RECORD_SCREENSHOTS: ${RECORD_SCREENSHOTS}"
          echo "RECORD_VIDEO: ${RECORD_VIDEO}"

      - name: Setup chrome
        if: always()
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: ${{ matrix.browser-version }}

      - name: Create/restore cache
        uses: actions/cache@v3
        id: node_modules-cache
        with:
          path: |
            "~/.cache/Cypress"
            "**/node_modules"
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies (if not previously cached)
        if: steps.node_modules-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Run tests
        uses: cypress-io/github-action@v3
        with:
          browser: ${{ matrix.browser }}
          command-prefix: '--'
          headless: true
          install: false
          build: npx browserslist@latest --update-db
          config: video=${{ env.RECORD_VIDEO }}
        env:
          TEST_ENVIRONMENT: ${{ matrix.environment }}

      - name: Prepare reports
        if: always()
        run: yarn report

      - name: Publish cucumber report
        uses: actions/upload-artifact@v3
        if: always() && env.RECORD_REPORT == 'true'
        with:
          name: ${{ env.ARTIFACT_IDENTIFIER }}-cucumber-report
          path: cypress/reports/cucumber.html

      - name: Publish data results
        uses: actions/upload-artifact@v3
        if: always() && env.RECORD_RESULT_DATA == 'true' && failure()
        with:
          name: ${{ env.ARTIFACT_IDENTIFIER }}-test-data
          path: cypress/fixtures

      - name: Upload test results (screenshots)
        if: always() && env.RECORD_SCREENSHOTS == 'true' && failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_IDENTIFIER }}-screenshots
          path: cypress/reports/screenshots

      - name: Publish videos results
        uses: actions/upload-artifact@v3
        if: always() && env.RECORD_VIDEO == 'true'
        with:
          name: ${{ env.ARTIFACT_IDENTIFIER }}-videos
          path: cypress/reports/videos
